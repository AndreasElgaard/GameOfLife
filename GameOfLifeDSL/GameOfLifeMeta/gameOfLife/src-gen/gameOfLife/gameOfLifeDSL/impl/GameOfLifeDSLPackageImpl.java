/**
 * generated by Xtext 2.28.0
 */
package gameOfLife.gameOfLifeDSL.impl;

import gameOfLife.gameOfLifeDSL.Action;
import gameOfLife.gameOfLifeDSL.ConditionElement;
import gameOfLife.gameOfLifeDSL.EvolutionRule;
import gameOfLife.gameOfLifeDSL.GameOfLife;
import gameOfLife.gameOfLifeDSL.GameOfLifeDSLFactory;
import gameOfLife.gameOfLifeDSL.GameOfLifeDSLPackage;
import gameOfLife.gameOfLifeDSL.Point;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class GameOfLifeDSLPackageImpl extends EPackageImpl implements GameOfLifeDSLPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass gameOfLifeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass pointEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass evolutionRuleEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum conditionElementEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum actionEEnum = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see gameOfLife.gameOfLifeDSL.GameOfLifeDSLPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private GameOfLifeDSLPackageImpl()
  {
    super(eNS_URI, GameOfLifeDSLFactory.eINSTANCE);
  }
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link GameOfLifeDSLPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static GameOfLifeDSLPackage init()
  {
    if (isInited) return (GameOfLifeDSLPackage)EPackage.Registry.INSTANCE.getEPackage(GameOfLifeDSLPackage.eNS_URI);

    // Obtain or create and register package
    Object registeredGameOfLifeDSLPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    GameOfLifeDSLPackageImpl theGameOfLifeDSLPackage = registeredGameOfLifeDSLPackage instanceof GameOfLifeDSLPackageImpl ? (GameOfLifeDSLPackageImpl)registeredGameOfLifeDSLPackage : new GameOfLifeDSLPackageImpl();

    isInited = true;

    // Create package meta-data objects
    theGameOfLifeDSLPackage.createPackageContents();

    // Initialize created meta-data
    theGameOfLifeDSLPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theGameOfLifeDSLPackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(GameOfLifeDSLPackage.eNS_URI, theGameOfLifeDSLPackage);
    return theGameOfLifeDSLPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getGameOfLife()
  {
    return gameOfLifeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getGameOfLife_AliveCells()
  {
    return (EReference)gameOfLifeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getGameOfLife_EvolutionRules()
  {
    return (EReference)gameOfLifeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPoint()
  {
    return pointEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPoint_X()
  {
    return (EAttribute)pointEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPoint_Y()
  {
    return (EAttribute)pointEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEvolutionRule()
  {
    return evolutionRuleEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEvolutionRule_ConditionElement()
  {
    return (EAttribute)evolutionRuleEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEvolutionRule_Amount()
  {
    return (EAttribute)evolutionRuleEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEvolutionRule_Action()
  {
    return (EAttribute)evolutionRuleEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getConditionElement()
  {
    return conditionElementEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getAction()
  {
    return actionEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public GameOfLifeDSLFactory getGameOfLifeDSLFactory()
  {
    return (GameOfLifeDSLFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    gameOfLifeEClass = createEClass(GAME_OF_LIFE);
    createEReference(gameOfLifeEClass, GAME_OF_LIFE__ALIVE_CELLS);
    createEReference(gameOfLifeEClass, GAME_OF_LIFE__EVOLUTION_RULES);

    pointEClass = createEClass(POINT);
    createEAttribute(pointEClass, POINT__X);
    createEAttribute(pointEClass, POINT__Y);

    evolutionRuleEClass = createEClass(EVOLUTION_RULE);
    createEAttribute(evolutionRuleEClass, EVOLUTION_RULE__CONDITION_ELEMENT);
    createEAttribute(evolutionRuleEClass, EVOLUTION_RULE__AMOUNT);
    createEAttribute(evolutionRuleEClass, EVOLUTION_RULE__ACTION);

    // Create enums
    conditionElementEEnum = createEEnum(CONDITION_ELEMENT);
    actionEEnum = createEEnum(ACTION);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes

    // Initialize classes and features; add operations and parameters
    initEClass(gameOfLifeEClass, GameOfLife.class, "GameOfLife", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getGameOfLife_AliveCells(), this.getPoint(), null, "aliveCells", null, 0, -1, GameOfLife.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getGameOfLife_EvolutionRules(), this.getEvolutionRule(), null, "evolutionRules", null, 0, -1, GameOfLife.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(pointEClass, Point.class, "Point", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPoint_X(), ecorePackage.getEInt(), "x", null, 0, 1, Point.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPoint_Y(), ecorePackage.getEInt(), "y", null, 0, 1, Point.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(evolutionRuleEClass, EvolutionRule.class, "EvolutionRule", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEvolutionRule_ConditionElement(), this.getConditionElement(), "conditionElement", null, 0, 1, EvolutionRule.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEvolutionRule_Amount(), ecorePackage.getEInt(), "amount", null, 0, 1, EvolutionRule.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEvolutionRule_Action(), this.getAction(), "action", null, 0, 1, EvolutionRule.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Initialize enums and add enum literals
    initEEnum(conditionElementEEnum, ConditionElement.class, "ConditionElement");
    addEEnumLiteral(conditionElementEEnum, ConditionElement.LOWER);
    addEEnumLiteral(conditionElementEEnum, ConditionElement.GREATER);
    addEEnumLiteral(conditionElementEEnum, ConditionElement.EQUAL);

    initEEnum(actionEEnum, Action.class, "Action");
    addEEnumLiteral(actionEEnum, Action.DIE);
    addEEnumLiteral(actionEEnum, Action.LIVE);
    addEEnumLiteral(actionEEnum, Action.BECOMEALIVE);

    // Create resource
    createResource(eNS_URI);
  }

} //GameOfLifeDSLPackageImpl
